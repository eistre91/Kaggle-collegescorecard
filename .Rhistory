?kmeans
contributors()
library(ggplot2)
library(ggthemes)
library(dplyr)
library(RSQLite)
library(gridExtra)
library(ggvis)
my_db <- src_sqlite("database.sqlite")
tbl <- tbl(my_db, "Scorecard")
data_dictionary <- read.csv("CollegeScorecardDataDictionary-09-12-2015.csv")
setwd("C:/Kaggle-collegescorecard/")
my_db <- src_sqlite("database.sqlite")
tbl <- tbl(my_db, "Scorecard")
data_dictionary <- read.csv("CollegeScorecardDataDictionary-09-12-2015.csv")
theme_set(theme_few())
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
trim <- select(tbl, contains("_p10"), -CUML_DEBT_P10, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED, C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP, PFTFTUG1_EF, PPTUG_EF, UGDS, UG25abv, PCIP01:PCIP54, CCBASIC:CCSIZSET, NPT4_PUB, NPT4_PRIV, COSTT4_A:TUITIONFEE_PROG, TUITFTE:PFTFAC, UNITID:LONGITUDE, Year, ADM_RATE, SATVR25:SAT_AVG, PCTFLOAN, PCTPELL, GRAD_DEBT_MDN, GRAD_DEBT_MDN_SUPP, WDRAW_DEBT_MDN, CURROPER, DISTANCEONLY, COMP_ORIG_YR2_RT:ENRL_2YR_TRANS_YR2_RT, COMP_ORIG_YR3_RT:ENRL_2YR_TRANS_YR3_RT, COMP_ORIG_YR4_RT:ENRL_2YR_TRANS_YR4_RT, COMP_ORIG_YR6_RT:ENRL_2YR_TRANS_YR6_RT, COMP_ORIG_YR8_RT:ENRL_2YR_TRANS_YR8_RT )
trim <- collect(trim)
current_colnames <- colnames(trim)
for(i in 1:length(current_colnames)) {
location <- which(data_dictionary$VARIABLE.NAME == current_colnames[i])
if(length(location) == 0) {next}
new_name <- as.character(data_dictionary[location, 4])
if(new_name != "") {current_colnames[i] <- new_name}
}
current_colnames <- make.names(current_colnames, unique = TRUE)
colnames(trim) <- current_colnames
trim <- trim %>% filter(state %in% c("AL", "AK", "AZ", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "AR", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"))
fill_in <- trim %>% filter(Year == 2013) %>% select(name, carnegie_basic)
for(id in 1:nrow(fill_in)) {
trim$carnegie_basic[trim$name %in% fill_in$name[id]] <- fill_in$carnegie_basic[id]
#trim$
}
cor(trim$admission_rate.overall, trim$act_scores.midpoint.cumulative, use="complete.obs")
cor(trim$admission_rate.overall, trim$sat_scores.midpoint.cumulative, use="complete.obs")
cor(trim$admission_rate.overall, trim$sat_scores.average.overall, use="complete.obs")
?cor
no_act_na <- filter(trim, !is.na(act_scores.midpoint.cumulative))
cor(trim$admission_rate.overall, trim$act_scores.midpoint.cumulative)
no_act_na <- filter(trim, !is.na(admission_rate.overall))
cor(no_act_na$admission_rate.overall, no_act_na$act_scores.midpoint.cumulative)
no_act_na
no_act_na$act_scores.midpoint.cumulative
no_act_na <- filter(trim, !is.na(admission_rate.overall), !is.na(act_scores.midpoint.cumulative))
no_acT_na
no_act_na
cor(no_act_na$admission_rate.overall, no_act_na$act_scores.midpoint.cumulative)
ggplot(no_act_na, aes(x = admission_rate.overall, y = act_scores.midpoint.cumulative)) +
geom_point()
no_act_na <- filter(no_act_na, !grepl("beauty", ignore.case = TRUE, name),
!grepl("hair", ignore.case = TRUE, name),
!grepl("cosmetology", ignore.case = TRUE, name),
!grepl("culinary", ignore.case = TRUE, name),
!grepl("restaurant", ignore.case = TRUE, name),
!grepl("mortuary", ignore.case = TRUE, name),
!grepl("funeral", ignore.case = TRUE, name),
!grepl("special", ignore.case = TRUE, carnegie_basic),
!grepl("the art institute", ignore.case = TRUE, name),
!grepl("media", ignore.case = TRUE, name),
!is.na(carnegie_basic))
cor(no_act_na$admission_rate.overall, no_act_na$act_scores.midpoint.cumulative)
ggplot(no_act_na, aes(x=admission_rate.overall, y=act_scores_midpoint.cumulative)) +
geom_point()
ggplot(no_act_na, aes(x=admission_rate.overall, y=act_scores.midpoint.cumulative)) +
geom_point()
ggplot(no_act_na, aes(x=admission_rate.overall, y=act_scores.midpoint.cumulative)) +
geom_jitter()
filter(no_act_na, act_scores.midpoint.cumulative < 20, admission_rate.overall < 0.25)
filter(no_act_na, act_scores.midpoint.cumulative < 20, admission_rate.overall < 0.25)$name
filter(no_act_na, act_scores.midpoint.cumulative < 20, admission_rate.overall < 0.25)$carnegie_basic
filter(no_act_na, act_scores.midpoint.cumulative < 20, admission_rate.overall < 0.25)$act_scores.midpoint.math
filter(no_act_na, act_scores.midpoint.cumulative < 20, admission_rate.overall < 0.25)$act_scores.midpoint.english
```
filter(trim, name == "California State University-San Bernardino")
filter(trim, name == "California State University-San Bernardino")$admission
filter(trim, name == "California State University-San Bernardino")$admission_rate.overall
filter(trim, name == "California State University-San Bernardino")$Year
filter(trim, name == "Mississippi Valley State University")$admission_rate.overall
filter(trim, name == "Mississippi Valley State University")$Year
library(rpart)
library(rpart.plot)
median(filter(trim, name == "California State University-San Bernardino")$admission_rate.overall)
mean(filter(trim, name == "California State University-San Bernardino")$admission_rate.overall)
ten <- trim %>% filter(Year %in% c(2007, 2009, 2011))
ten_earnings <- ten %>% filter(!is.na(X10_yrs_after_entry.median), X10_yrs_after_entry.median > 0)
admission_earnings <- filter(ten_earnings, !is.na(admission_rate.overall))
admission_earnings
ggplot(admission_earnings, aes(x=admission_rate.overall, y=X10_yrs_after_entry.median)) +
geom_point()
act_admission_earnings <- filter(admission_earnings, !is.na(act_scores.midpoint.cumulative))
ggplot(act_admission_earnings, aes(x=admission_rate.overall, y=X10_yrs_after_entry.median)) +
geom_point(aes(color=act_scores.midpoint.cumulative))
ggplot(no_act_na, aes(x=admission_rate.overall, y=act_scores.midpoint.cumulative)) +
geom_jitter()
ggplot(act_admission_earnings, aes(x=admission_rate.overall, y=X10_yrs_after_entry.median)) +
geom_point(aes(color=act_scores.midpoint.cumulative))
ggplot(aes(x = state), data = state_earnings) +
geom_boxplot(aes(y = median_earnings, fill=cbPalette[2], label=state), outlier.shape=NA, coef=0) +
scale_x_discrete(limits=unique(state_earnings$state)) +
guides(fill=FALSE) +
geom_text(data=with_median, aes(x=state, label=state, y=median_median-1000), nudge_x=.1, size=3) +
theme(axis.text.y = element_blank()) +
xlab("State") +
ylab("Median Earnings After 10 Years") +
coord_flip(ylim=c(20000,60000))
state_earnings <- ten_earnings %>%
select(median_earnings = X10_yrs_after_entry.median,
p25_earnings = pct25_earn_wne_p10,
p75_earnings = pct75_earn_wne_p10,
state,
admission_rate.overall)
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
state_earnings <- mutate(state_earnings, median_median = 0)
for(i in 1:nrow(with_median)) {
state_earnings$median_median[state_earnings$state == with_median[[i,1]]] <- with_median[[i,2]]
}
state_earnings <- state_earnings %>% arrange(median_median)
ggplot(aes(x = state), data = state_earnings) +
geom_boxplot(aes(y = median_earnings, fill=cbPalette[2], label=state), outlier.shape=NA, coef=0) +
scale_x_discrete(limits=unique(state_earnings$state)) +
guides(fill=FALSE) +
geom_text(data=with_median, aes(x=state, label=state, y=median_median-1000), nudge_x=.1, size=3) +
theme(axis.text.y = element_blank()) +
xlab("State") +
ylab("Median Earnings After 10 Years") +
coord_flip(ylim=c(20000,60000))
relative <- read.csv("relativevalue.csv", skipNul = TRUE)
colnames(relative) <- c("state", "relative")
relative <- inner_join(with_median, relative)
mytheme <- ttheme_default(core = list(fg_params=list(cex = 2.0)))
myt <- gridExtra::tableGrob(relative, theme = mytheme)
grid.table(relative)
relative_display <- select(relative, State = state, "Relative Value of $100" = relative)
left <- tableGrob(relative_display[1:17,], rows = 1:17)
middle <- tableGrob(relative_display[18:34,], rows = 18:34)
right <- tableGrob(relative_display[35:51,], rows = 35:51)
grid.arrange(left, middle, right, ncol=3)
state_earnings <- state_earnings %>% mutate(relative_value = 0)
for(i in 1:nrow(with_median)) {
state_earnings$relative_value[state_earnings$state == relative[[i,1]]] <- relative[[i,3]]
}
state_earnings <- state_earnings %>% mutate(adjusted_earnings = 0)
state_earnings <- state_earnings %>% mutate(adjusted_earnings = (median_earnings)*(relative_value/100))
with_median <- state_earnings %>% group_by(state) %>% summarise(median_adjusted = median(adjusted_earnings))
state_earnings <- mutate(state_earnings, median_adjusted = 0)
for(i in 1:nrow(with_median)) {
state_earnings$median_adjusted[state_earnings$state == with_median[[i,1]]] <- with_median[[i,2]]
}
state_earnings <- state_earnings %>% arrange(median_adjusted)
ggplot(aes(x = state), data = state_earnings) +
geom_boxplot(aes(y = adjusted_earnings, fill=cbPalette[2]), outlier.shape=NA, coef=0) +
scale_x_discrete(limits=unique(state_earnings$state)) +
guides(fill=FALSE) +
geom_text(data=with_median, aes(x=state, label=state, y=median_adjusted-1000), nudge_x=.1, size=3) +
theme(axis.text.y = element_blank()) +
xlab("State") +
ylab("Adjusted Median Earnings After 10 Years") +
coord_flip(ylim=c(20000,60000))
