?kmeans
setwd("C:/Kaggle-collegescorecard/")
library(ggplot2)
library(dplyr)
library(RSQLite)
library(gridExtra)
my_db <- src_sqlite("database.sqlite")
tbl <- tbl(my_db, "Scorecard")
data_dictionary <- read.csv("CollegeScorecardDataDictionary-09-12-2015.csv")
earnings <- select(tbl, contains("_p10"), -CUML_DEBT_P10)
completion_rates <- select(tbl, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED,
C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP)
retention_rates <- select(tbl, RET_FT4:RET_PTL4)
first_full_time <- select(tbl, PFTFTUG1_EF)
part_time <- select(tbl, PPTUG_EF)
enrollment <- select(tbl, UGDS)
adult_students <- select(tbl, UG25abv)
degree_breakdown <- select(tbl, PCIP01:PCIP54)
carnegie_classes <- select(tbl, CCBASIC:CCSIZSET)
cost <- select(tbl, NPT4_PUB, NPT4_PRIV, COSTT4_A:TUITIONFEE_PROG)
school_business <- select(tbl, TUITFTE:PFTFAC)
descriptive_information <- select(tbl, UNITID:LONGITUDE, Year)
admission_rate <- select(tbl, ADM_RATE)
test_scores <- select(tbl, SATVR25:SAT_AVG)
federal_aid_percent <- select(tbl, PCTFLOAN, PCTPELL)
debt_medians <- select(tbl, GRAD_DEBT_MDN, GRAD_DEBT_MDN_SUPP, WDRAW_DEBT_MDN)
operating <- select(tbl, CURROPER)
online <- select(tbl, DISTANCEONLY)
trim <- select(tbl, contains("_p10"), -CUML_DEBT_P10, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED, C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP, RET_FT4:RET_PTL4, PFTFTUG1_EF, PPTUG_EF, UGDS, UG25abv, PCIP01:PCIP54, CCBASIC:CCSIZSET, NPT4_PUB, NPT4_PRIV, COSTT4_A:TUITIONFEE_PROG, TUITFTE:PFTFAC, UNITID:LONGITUDE, Year, ADM_RATE, SATVR25:SAT_AVG, PCTFLOAN, PCTPELL, GRAD_DEBT_MDN, GRAD_DEBT_MDN_SUPP, WDRAW_DEBT_MDN, CURROPER, DISTANCEONLY)
trim <- collect(trim)
current_colnames <- colnames(trim)
for(i in 1:length(current_colnames)) {
location <- which(data_dictionary$VARIABLE.NAME == current_colnames[i])
if(length(location) == 0) {next}
new_name <- as.character(data_dictionary[location, 4])
if(new_name != "") {current_colnames[i] <- new_name}
}
current_colnames <- make.names(current_colnames, unique = TRUE)
colnames(trim) <- current_colnames
trim <- trim %>% filter(state %in% c("AL", "AK", "AZ", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "AR", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"))
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ten <- trim %>% filter(Year %in% c(2007, 2009, 2011))
ten_earnings <- ten %>% filter(!is.na(X10_yrs_after_entry.median), X10_yrs_after_entry.median > 0)
state_earnings <- ten_earnings %>%
select(median_earnings = X10_yrs_after_entry.median,
p25_earnings = pct25_earn_wne_p10,
p75_earnings = pct75_earn_wne_p10,
state)
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
state_earnings <- mutate(state_earnings, median_median = 0)
for(i in 1:nrow(with_median)) {
state_earnings$median_median[state_earnings$state == with_median[[i,1]]] <- with_median[[i,2]]
}
state_earnings <- state_earnings %>% arrange(median_median)
ggplot(aes(x = state), data = state_earnings) +
geom_boxplot(aes(y = median_earnings, fill=cbPalette[2])) +
scale_y_continuous(limits=c(0, 100000)) +
scale_x_discrete(limits=unique(state_earnings$state)) +
guides(fill=FALSE)
relative_value <- read.csv("relativevalue.csv", skipNul = TRUE)
colnames(relative_value) <- c("state", "relative")
glimpse(state_earnings)
state_earnings <- state_earnings %>% mutate(relative_value = 0)
glimpse(state_earnings)
glimpse(relative_value)
relative_value[[1,1]]
relative <- read.csv("relativevalue.csv", skipNul = TRUE)
colnames(relative) <- c("state", "relative")
state_earnings <- state_earnings %>% mutate(relative_value = 0)
for(i in 1:nrow(with_median)) {
state_earnings$relative_value[state_earnings$state == relative[[i,1]]] <- relative[[i,2]]
}
glimpse(state_earnings)
relative
state_earnings <- state_earnings %>% mutate(adjusted_earnings = (median_earnings/1000)/(relative_value/100))
state_earnings
state_earnings <- state_earnings %>% mutate(adjusted_earnings = (median_earnings/1000)*(relative_value/100))
state_earnings
with_median <- state_earnings %>% group_by(state) %>% summarise(median_adjusted = median(adjusted_earnings))
state_earnings <- mutate(state_earnings, median_adjusted = 0)
state_earnings
state_earnings[1]
state_earnings[2]
state_earnings
state_earnings$state == with_median$state
sum(state_earnings$state == with_median$state)
sum(state_earnings$state == with_median[[1,1]])
with_median[1,1]
with_median
glimpse(state_earnings)
for(i in 1:nrow(with_median)) {
state_earnings$median_adjusted[state_earnings$state == with_median[[i,1]]] <- with_median[[i,2]]
}
state_earnings <- state_earnings %>% arrange(median_adjusted)
ggplot(aes(x = state), data = state_earnings) +
geom_boxplot(aes(y = median_adjusted, fill=cbPalette[2])) +
scale_y_continuous(limits=c(0, 100000)) +
scale_x_discrete(limits=unique(state_earnings$state)) +
guides(fill=FALSE)
ggplot(aes(x = state), data = state_earnings) +
geom_boxplot(aes(y = median_adjusted, fill=cbPalette[2])) +
scale_x_discrete(limits=unique(state_earnings$state)) +
scale_y_continuous() +
guides(fill=FALSE)
ggplot(aes(x = state), data = state_earnings) +
geom_boxplot(aes(y = adjusted_earnings, fill=cbPalette[2])) +
scale_y_continuous() +
scale_x_discrete(limits=unique(state_earnings$state)) +
guides(fill=FALSE)
ggplot(aes(x = state), data = state_earnings) +
geom_boxplot(aes(y = adjusted_earnings, fill=cbPalette[2])) +
scale_y_continuous(limits=c(0,75)) +
scale_x_discrete(limits=unique(state_earnings$state)) +
guides(fill=FALSE)
ggplot(aes(x = state), data = state_earnings) +
geom_boxplot(aes(y = adjusted_earnings, fill=cbPalette[2])) +
scale_y_continuous(limits=c(20,50)) +
scale_x_discrete(limits=unique(state_earnings$state)) +
guides(fill=FALSE)
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
state_earnings <- mutate(state_earnings, median_median = 0)
for(i in 1:nrow(with_median)) {
state_earnings$median_median[state_earnings$state == with_median[[i,1]]] <- with_median[[i,2]]
}
state_earnings <- state_earnings %>% arrange(median_median)
ggplot(aes(x = state), data = state_earnings) +
geom_boxplot(aes(y = median_earnings, fill=cbPalette[2])) +
scale_y_continuous(limits=c(0, 100000)) +
scale_x_discrete(limits=unique(state_earnings$state)) +
guides(fill=FALSE)
