?kmeans
mobility <- read.spss("Oct08 Mobility_cleaned.sav", to.data.frame = TRUE)
mobility <- tbl_df(mobility)
mobility_state <- select(mobility, sex, q9:q20, educ, age)
mobility_state <- filter(mobility_state, !is.na(q13))
mobility_state_college <- filter(mobility_state, educ %in% c("Some college, no 4-year degree (including associate degree)",
"College graduate (B.S., B.A., or other 4-year degree)",
"Post-graduate training or professional schooling after college (e.g., toward a Master's degree or Ph.D.; law or medical "),
!is.na(q13))
ggplot(mobility_state, aes(x=q13)) +
geom_bar(stat="count")
library(foreign)
library(dplyr)
library(plyr)
library(tidyr)
library(ggplot2)
mobility <- read.spss("Oct08 Mobility_cleaned.sav", to.data.frame = TRUE)
mobility <- tbl_df(mobility)
mobility_state <- select(mobility, sex, q9:q20, educ, age)
mobility_state <- filter(mobility_state, !is.na(q13))
mobility_state_college <- filter(mobility_state, educ %in% c("Some college, no 4-year degree (including associate degree)",
"College graduate (B.S., B.A., or other 4-year degree)",
"Post-graduate training or professional schooling after college (e.g., toward a Master's degree or Ph.D.; law or medical "),
!is.na(q13))
ggplot(mobility_state, aes(x=q13)) +
geom_bar(stat="count")
mobility <- read.spss("Oct08 Mobility_cleaned.sav", to.data.frame = TRUE)
setwd("C:/Kaggle-collegescorecard/")
mobility <- read.spss("Oct08 Mobility_cleaned.sav", to.data.frame = TRUE)
mobility <- tbl_df(mobility)
mobility_state <- select(mobility, sex, q9:q20, educ, age)
mobility_state <- filter(mobility_state, !is.na(q13))
mobility_state_college <- filter(mobility_state, educ %in% c("Some college, no 4-year degree (including associate degree)",
"College graduate (B.S., B.A., or other 4-year degree)",
"Post-graduate training or professional schooling after college (e.g., toward a Master's degree or Ph.D.; law or medical "),
!is.na(q13))
ggplot(mobility_state, aes(x=q13)) +
geom_bar(stat="count")
table(mobility_state$q13)
1067/(1067+440)
table(mobility_state_college$q13)
773/(773+237)
library(ggtheme)
library(ggthemes)
install.packages('ggthemes', dependencies = TRUE)
?theme_set
library(ggthemes)
theme_set(theme_fivethirtyeight())
ggplot(mobility_state, aes(x=q13)) +
geom_bar(stat="count")
library(ggplot2)
ggplot(mobility_state, aes(x=q13)) +
geom_bar(stat="count") +
scale_color_colorblind()
ggplot(mobility_state, aes(x=q13)) +
geom_bar(stat="count") +
scale_color_colorblind(aes(color=q13))
ggplot(mobility_state, aes(x=q13, color=q13)) +
geom_bar(stat="count") +
scale_color_colorblind(aes(color=q13))
ggplot(mobility_state, aes(x=q13, fill=q13)) +
geom_bar(stat="count") +
scale_color_colorblind(aes(color=q13))
ggplot(mobility_state, aes(x=q13, fill=q13)) +
geom_bar(stat="count") +
scale_color_colorblind()
ggplot(mobility_state, aes(x=q13, fill=q13)) +
geom_bar(stat="count") +
scale_color_few()
ggplot(mobility_state, aes(x=q13, fill=q13)) +
geom_bar(stat="count") +
scale_color_few(aes(fill=q13))
ggplot(mobility_state, aes(x=q13)) +
geom_bar(stat="count") +
scale_color_few(aes(fill=q13))
ggplot(mobility_state, aes(x=q13, color=q13, fill=q13)) +
geom_bar(stat="count") +
scale_color_few()
?theme_Set
?theme_set
ggplot(mobility_state, aes(x=q13, color=q13, fill=q13)) +
geom_bar(stat="count") +
scale_color_few() +
scale_fill_few()
ggplot(mobility_state, aes(x=q13, color=q13, fill=q13)) +
geom_bar(stat="count") +
scale_color_colorblind() +
scale_fill_colorblind()
?coord_tran
?coord_trans
library(ggplot2)
library(ggthemes)
library(dplyr)
library(RSQLite)
library(gridExtra)
my_db <- src_sqlite("database.sqlite")
tbl <- tbl(my_db, "Scorecard")
data_dictionary <- read.csv("CollegeScorecardDataDictionary-09-12-2015.csv")
theme_set(theme_few())
trim <- select(tbl, contains("_p10"), -CUML_DEBT_P10, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED, C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP, PFTFTUG1_EF, PPTUG_EF, UGDS, UG25abv, PCIP01:PCIP54, CCBASIC:CCSIZSET, NPT4_PUB, NPT4_PRIV, COSTT4_A:TUITIONFEE_PROG, TUITFTE:PFTFAC, UNITID:LONGITUDE, Year, ADM_RATE, SATVR25:SAT_AVG, PCTFLOAN, PCTPELL, GRAD_DEBT_MDN, GRAD_DEBT_MDN_SUPP, WDRAW_DEBT_MDN, CURROPER, DISTANCEONLY, COMP_ORIG_YR2_RT:ENRL_2YR_TRANS_YR2, COMP_ORIG_YR3_RT:ENRL_3YR_TRANS_YR3, COMP_ORIG_YR4_RT:ENRL_4YR_TRANS_YR4, COMP_ORIG_YR6_RT:ENRL_6YR_TRANS_YR6, COMP_ORIG_YR8_RT:ENRL_8YR_TRANS_YR8 )
trim <- collect(trim)
current_colnames <- colnames(trim)
for(i in 1:length(current_colnames)) {
location <- which(data_dictionary$VARIABLE.NAME == current_colnames[i])
library(ggplot2)
library(ggthemes)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(RSQLite)
library(gridExtra)
my_db <- src_sqlite("database.sqlite")
tbl <- tbl(my_db, "Scorecard")
data_dictionary <- read.csv("CollegeScorecardDataDictionary-09-12-2015.csv")
theme_set(theme_few())
trim <- select(tbl, contains("_p10"), -CUML_DEBT_P10, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED, C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP, PFTFTUG1_EF, PPTUG_EF, UGDS, UG25abv, PCIP01:PCIP54, CCBASIC:CCSIZSET, NPT4_PUB, NPT4_PRIV, COSTT4_A:TUITIONFEE_PROG, TUITFTE:PFTFAC, UNITID:LONGITUDE, Year, ADM_RATE, SATVR25:SAT_AVG, PCTFLOAN, PCTPELL, GRAD_DEBT_MDN, GRAD_DEBT_MDN_SUPP, WDRAW_DEBT_MDN, CURROPER, DISTANCEONLY, COMP_ORIG_YR2_RT:ENRL_2YR_TRANS_YR2, COMP_ORIG_YR3_RT:ENRL_3YR_TRANS_YR3, COMP_ORIG_YR4_RT:ENRL_4YR_TRANS_YR4, COMP_ORIG_YR6_RT:ENRL_6YR_TRANS_YR6, COMP_ORIG_YR8_RT:ENRL_8YR_TRANS_YR8 )
trim <- select(tbl, contains("_p10"), -CUML_DEBT_P10, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED, C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP, PFTFTUG1_EF, PPTUG_EF, UGDS, UG25abv, PCIP01:PCIP54, CCBASIC:CCSIZSET, NPT4_PUB, NPT4_PRIV, COSTT4_A:TUITIONFEE_PROG, TUITFTE:PFTFAC, UNITID:LONGITUDE, Year, ADM_RATE, SATVR25:SAT_AVG, PCTFLOAN, PCTPELL, GRAD_DEBT_MDN, GRAD_DEBT_MDN_SUPP, WDRAW_DEBT_MDN, CURROPER, DISTANCEONLY, COMP_ORIG_YR2_RT:ENRL_2YR_TRANS_YR2_RT, COMP_ORIG_YR3_RT:ENRL_3YR_TRANS_YR3_RT, COMP_ORIG_YR4_RT:ENRL_4YR_TRANS_YR4_RT, COMP_ORIG_YR6_RT:ENRL_6YR_TRANS_YR6_RT, COMP_ORIG_YR8_RT:ENRL_8YR_TRANS_YR8_RT )
trim <- select(tbl, contains("_p10"), -CUML_DEBT_P10, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED, C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP, PFTFTUG1_EF, PPTUG_EF, UGDS, UG25abv, PCIP01:PCIP54, CCBASIC:CCSIZSET, NPT4_PUB, NPT4_PRIV, COSTT4_A:TUITIONFEE_PROG, TUITFTE:PFTFAC, UNITID:LONGITUDE, Year, ADM_RATE, SATVR25:SAT_AVG, PCTFLOAN, PCTPELL, GRAD_DEBT_MDN, GRAD_DEBT_MDN_SUPP, WDRAW_DEBT_MDN, CURROPER, DISTANCEONLY, COMP_ORIG_YR2_RT:ENRL_2YR_TRANS_YR2_RT, COMP_ORIG_YR4_RT:ENRL_4YR_TRANS_YR4_RT, COMP_ORIG_YR6_RT:ENRL_6YR_TRANS_YR6_RT, COMP_ORIG_YR8_RT:ENRL_8YR_TRANS_YR8_RT )
trim <- select(tbl, contains("_p10"), -CUML_DEBT_P10, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED, C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP, PFTFTUG1_EF, PPTUG_EF, UGDS, UG25abv, PCIP01:PCIP54, CCBASIC:CCSIZSET, NPT4_PUB, NPT4_PRIV, COSTT4_A:TUITIONFEE_PROG, TUITFTE:PFTFAC, UNITID:LONGITUDE, Year, ADM_RATE, SATVR25:SAT_AVG, PCTFLOAN, PCTPELL, GRAD_DEBT_MDN, GRAD_DEBT_MDN_SUPP, WDRAW_DEBT_MDN, CURROPER, DISTANCEONLY, COMP_ORIG_YR2_RT:ENRL_2YR_TRANS_YR2_RT, COMP_ORIG_YR4_RT:ENRL_4YR_TRANS_YR4_RT, COMP_ORIG_YR8_RT:ENRL_8YR_TRANS_YR8_RT )
trim <- select(tbl, contains("_p10"), -CUML_DEBT_P10, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED, C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP, PFTFTUG1_EF, PPTUG_EF, UGDS, UG25abv, PCIP01:PCIP54, CCBASIC:CCSIZSET, NPT4_PUB, NPT4_PRIV, COSTT4_A:TUITIONFEE_PROG, TUITFTE:PFTFAC, UNITID:LONGITUDE, Year, ADM_RATE, SATVR25:SAT_AVG, PCTFLOAN, PCTPELL, GRAD_DEBT_MDN, GRAD_DEBT_MDN_SUPP, WDRAW_DEBT_MDN, CURROPER, DISTANCEONLY, COMP_ORIG_YR2_RT:ENRL_2YR_TRANS_YR2_RT, COMP_ORIG_YR3_RT:ENRL_2YR_TRANS_YR3_RT, COMP_ORIG_YR4_RT:ENRL_2YR_TRANS_YR4_RT, COMP_ORIG_YR6_RT:ENRL_2YR_TRANS_YR6_RT, COMP_ORIG_YR8_RT:ENRL_2YR_TRANS_YR8_RT )
trim <- collect(trim)
current_colnames <- colnames(trim)
for(i in 1:length(current_colnames)) {
location <- which(data_dictionary$VARIABLE.NAME == current_colnames[i])
if(length(location) == 0) {next}
new_name <- as.character(data_dictionary[location, 4])
if(new_name != "") {current_colnames[i] <- new_name}
}
current_colnames <- make.names(current_colnames, unique = TRUE)
colnames(trim) <- current_colnames
trim <- trim %>% filter(state %in% c("AL", "AK", "AZ", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "AR", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"))
#scale_colour_colorblind
#scale_colour_few
#scale_fill_few
ten <- trim %>% filter(Year %in% c(2007, 2009, 2011))
ten_earnings <- ten %>% filter(!is.na(X10_yrs_after_entry.median), X10_yrs_after_entry.median > 0)
state_earnings <- ten_earnings %>%
select(median_earnings = X10_yrs_after_entry.median,
p25_earnings = pct25_earn_wne_p10,
p75_earnings = pct75_earn_wne_p10,
state)
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
state_earnings <- mutate(state_earnings, median_median = 0)
for(i in 1:nrow(with_median)) {
state_earnings$median_median[state_earnings$state == with_median[[i,1]]] <- with_median[[i,2]]
}
state_earnings <- state_earnings %>% arrange(median_median)
ggplot(aes(x = state), data = state_earnings) +
geom_boxplot(aes(y = median_earnings, fill=cbPalette[2])) +
coord_trans(limy=c(0, 100000)) +
state_earnings <- state_earnings %>% arrange(median_median)
state_earnings <- ten_earnings %>%
select(median_earnings = X10_yrs_after_entry.median,
p25_earnings = pct25_earn_wne_p10,
p75_earnings = pct75_earn_wne_p10,
state)
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
state_earnings <- mutate(state_earnings, median_median = 0)
for(i in 1:nrow(with_median)) {
state_earnings$median_median[state_earnings$state == with_median[[i,1]]] <- with_median[[i,2]]
}
with_median
state_earnings
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
with_median
state_earnings %>% group_by(state)
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
with_median
ten
ten_earnings
state_earnings
unique(state_earnings$state)
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
with_median
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
with_median
with_median <- state_earnings %>% group_by(state) %>% summarise(test = median_earnings)
with_median
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
with_median
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
with_median
ten <- trim %>% filter(Year %in% c(2007, 2009, 2011))
ten_earnings <- ten %>% filter(!is.na(X10_yrs_after_entry.median), X10_yrs_after_entry.median > 0)
state_earnings <- ten_earnings %>%
select(median_earnings = X10_yrs_after_entry.median,
p25_earnings = pct25_earn_wne_p10,
p75_earnings = pct75_earn_wne_p10,
state)
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
state_earnings <- mutate(state_earnings, median_median = 0)
for(i in 1:nrow(with_median)) {
state_earnings$median_median[state_earnings$state == with_median[[i,1]]] <- with_median[[i,2]]
}
relative <- read.csv("relativevalue.csv", skipNul = TRUE)
colnames(relative) <- c("state", "relative")
state_earnings <- state_earnings %>% mutate(relative_value = 0)
for(i in 1:nrow(with_median)) {
state_earnings$relative_value[state_earnings$state == relative[[i,1]]] <- relative[[i,2]]
}
state_earnings <- state_earnings %>% mutate(adjusted_earnings = (median_earnings/1000)*(relative_value/100))
with_median <- state_earnings %>% group_by(state) %>% summarise(median_adjusted = median(adjusted_earnings))
with_median
trim$state
trim$state_fips
trim$state
ls()
rm(ls)
rm(ls())
rm(as.character(ls()))
?rm
rm(list=ls())
library(ggplot2)
library(ggthemes)
library(dplyr)
library(RSQLite)
library(gridExtra)
my_db <- src_sqlite("database.sqlite")
tbl <- tbl(my_db, "Scorecard")
data_dictionary <- read.csv("CollegeScorecardDataDictionary-09-12-2015.csv")
theme_set(theme_few())
trim <- select(tbl, contains("_p10"), -CUML_DEBT_P10, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED, C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP, PFTFTUG1_EF, PPTUG_EF, UGDS, UG25abv, PCIP01:PCIP54, CCBASIC:CCSIZSET, NPT4_PUB, NPT4_PRIV, COSTT4_A:TUITIONFEE_PROG, TUITFTE:PFTFAC, UNITID:LONGITUDE, Year, ADM_RATE, SATVR25:SAT_AVG, PCTFLOAN, PCTPELL, GRAD_DEBT_MDN, GRAD_DEBT_MDN_SUPP, WDRAW_DEBT_MDN, CURROPER, DISTANCEONLY, COMP_ORIG_YR2_RT:ENRL_2YR_TRANS_YR2_RT, COMP_ORIG_YR3_RT:ENRL_2YR_TRANS_YR3_RT, COMP_ORIG_YR4_RT:ENRL_2YR_TRANS_YR4_RT, COMP_ORIG_YR6_RT:ENRL_2YR_TRANS_YR6_RT, COMP_ORIG_YR8_RT:ENRL_2YR_TRANS_YR8_RT )
trim <- collect(trim)
current_colnames <- colnames(trim)
for(i in 1:length(current_colnames)) {
location <- which(data_dictionary$VARIABLE.NAME == current_colnames[i])
if(length(location) == 0) {next}
new_name <- as.character(data_dictionary[location, 4])
if(new_name != "") {current_colnames[i] <- new_name}
}
current_colnames <- make.names(current_colnames, unique = TRUE)
colnames(trim) <- current_colnames
trim <- trim %>% filter(state %in% c("AL", "AK", "AZ", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "AR", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"))
ten <- trim %>% filter(Year %in% c(2007, 2009, 2011))
ten_earnings <- ten %>% filter(!is.na(X10_yrs_after_entry.median), X10_yrs_after_entry.median > 0)
state_earnings <- ten_earnings %>%
select(median_earnings = X10_yrs_after_entry.median,
p25_earnings = pct25_earn_wne_p10,
p75_earnings = pct75_earn_wne_p10,
state)
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
with_median
earnings <- select(tbl, contains("_p10"), -CUML_DEBT_P10)
completion_rates <- select(tbl, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED,
C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP)
retention_rates <- select(tbl, RET_FT4:RET_PTL4)
first_full_time <- select(tbl, PFTFTUG1_EF)
part_time <- select(tbl, PPTUG_EF)
enrollment <- select(tbl, UGDS)
adult_students <- select(tbl, UG25abv)
earnings <- select(tbl, contains("_p10"), -CUML_DEBT_P10)
completion_rates <- select(tbl, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED,
function (.data, ...)
{
earnings <- select(tbl, contains("_p10"), -CUML_DEBT_P10)
completion_rates <- select(tbl, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED,
C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP)
earnings <- select(tbl, contains("_p10"), -CUML_DEBT_P10)
completion_rates <- select(tbl, C150_4_POOLED, C150_L4_POOLED, C200_4_POOLED, C200_L4_POOLED,
C150_4_POOLED_SUPP, C150_L4_POOLED_SUPP, C200_4_POOLED_SUPP, C200_L4_POOLED_SUPP)
retention_rates <- select(tbl, RET_FT4:RET_PTL4)
first_full_time <- select(tbl, PFTFTUG1_EF)
part_time <- select(tbl, PPTUG_EF)
enrollment <- select(tbl, UGDS)
adult_students <- select(tbl, UG25abv)
degree_breakdown <- select(tbl, PCIP01:PCIP54)
carnegie_classes <- select(tbl, CCBASIC:CCSIZSET)
cost <- select(tbl, NPT4_PUB, NPT4_PRIV, NPT4_PROG, NPT4_OTHER, COSTT4_A:TUITIONFEE_PROG)
school_business <- select(tbl, TUITFTE:PFTFAC)
descriptive_information <- select(tbl, UNITID:LONGITUDE, Year)
admission_rate <- select(tbl, ADM_RATE)
#test_scores <- select(tbl, SATVR25:SAT_AVG)
#federal_aid_percent <- select(tbl, PCTFLOAN, PCTPELL)
debt_medians <- select(tbl, GRAD_DEBT_MDN, GRAD_DEBT_MDN_SUPP, WDRAW_DEBT_MDN)
operating <- select(tbl, CURROPER)
online <- select(tbl, DISTANCEONLY)
```
ten <- trim %>% filter(Year %in% c(2007, 2009, 2011))
ten_earnings <- ten %>% filter(!is.na(X10_yrs_after_entry.median), X10_yrs_after_entry.median > 0)
state_earnings <- ten_earnings %>%
select(median_earnings = X10_yrs_after_entry.median,
p25_earnings = pct25_earn_wne_p10,
p75_earnings = pct75_earn_wne_p10,
state)
with_median <- state_earnings %>% group_by(state) %>% summarise(median_median = median(median_earnings))
state_earnings <- mutate(state_earnings, median_median = 0)
for(i in 1:nrow(with_median)) {
state_earnings$median_median[state_earnings$state == with_median[[i,1]]] <- with_median[[i,2]]
}
state_earnings <- state_earnings %>% arrange(median_median)
with_median
state_earnings %>% group_by(state) %>% summarise(test = median(median_earnings))
?summarise
?detach
detach(ggthemes)
